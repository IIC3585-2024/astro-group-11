---
interface Props {
	session: any;
	id: number;
	name: string;
	services: {};
	seasons: {};
	description: string;
	categories: {};
	stars: number;
	n_califications: number;
}

const { session, id, name, services, seasons, description, categories, stars, n_califications } = Astro.props;

---

<div>
	<h2>
		{name}
	</h2>
	<h2>
		Estrellas: {stars} ({n_califications})
	</h2>
	<p>
		{description}
	</p>
	{
		Object.keys(services).map((service) => (
			<p>{service}</p>
		))
	}
	{
		Object.keys(categories).map((category) => (
			<p>{category}</p>
		))
	}
	<table>
		<th>Season</th>
		<th>Episodes</th>
		{
			Object.entries(seasons).map(([season, episodes]) => (
				<tr>
					<td>{season}</td>
					<td>{episodes}</td>
				</tr>
			))
		}
		
	</table>
	{
		session
			? 
			<form action="/api/add-comment" method="POST" style="display: grid">
				<label for="content">Comentario</label>			
				<textarea name="content"></textarea>

				<label for="calification">Calificación</label>
				<input type="number" name="calification" />

				<input type="hidden" name="email" value={session.user.email} />
				<input type="hidden" name="serieId" value={id} />
				
				<button type="submit">Enviar</button>
			</form>

			: <p>Debes iniciar sesión para publicar un comentario</p>
	}
</div>


<style>
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
</style>
